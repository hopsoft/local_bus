# Generated from lib/local_bus/message.rb with RBS::Inline

class LocalBus
  # Represents a message in the LocalBus system
  class Message
    # Constructor
    # @note Creates a new Message instance with the given topic and payload
    # @rbs topic: String -- the topic of the message
    # @rbs timeout: Float? -- optional timeout for message processing (in seconds)
    # @rbs payload: Hash -- the message payload
    def initialize: (String topic, ?timeout: Float?, **untyped payload) -> untyped

    # Unique identifier for the message
    # @rbs return: String
    attr_reader id: untyped

    # Message topic
    # @rbs return: String
    attr_reader topic: untyped

    # Message payload
    # @rbs return: Hash
    attr_reader payload: untyped

    # Time when the message was created or published
    # @rbs return: Time
    attr_reader created_at: untyped

    # ID of the thread that created the message
    # @rbs return: Integer
    attr_reader thread_id: untyped

    # Timeout for message processing (in seconds)
    # @rbs return: Float
    attr_reader timeout: untyped

    # Metadata for the message
    # @rbs return: Hash[Symbol, untyped]
    attr_reader metadata: untyped

    # Allows pattern matching on message attributes
    # @rbs keys: Array[Symbol] -- keys to extract from the message
    # @rbs return: Hash[Symbol, untyped]
    def deconstruct_keys: (Array[Symbol] keys) -> Hash[Symbol, untyped]
  end
end
