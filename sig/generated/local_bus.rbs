# Generated from lib/local_bus.rb with RBS::Inline

class LocalBus
  include Singleton

  # Default Bus instance
  # @rbs return: Bus
  attr_reader bus: untyped

  # Default Station instance
  # @rbs return: Station
  attr_reader station: untyped

  # Publishes a message via the default Station
  #
  # @rbs topic: String | Symbol -- topic name
  # @rbs priority: Integer -- priority of the message, higher number == higher priority (default: 1)
  # @rbs timeout: Float -- seconds to wait before cancelling
  # @rbs payload: Hash[Symbol, untyped] -- message payload
  # @rbs return: Message
  def self.publish: () -> Message

  # Publishes a pre-built message via the default Station
  # @rbs message: Message -- message to publish
  # @rbs return: Message
  def self.publish_message: () -> Message

  # Subscribe to a topic via the default Station
  # @rbs topic: String -- topic name
  # @rbs callable: (Message) -> untyped -- callable that will process messages published to the topic
  # @rbs &block: (Message) -> untyped -- alternative way to provide a callable
  # @rbs return: Station
  def self.subscribe: () { (Message) -> untyped } -> Station

  # Unsubscribes a callable from a topic via the default Station
  # @rbs topic: String -- topic name
  # @rbs callable: (Message) -> untyped -- subscriber that should no longer receive messages
  # @rbs return: Station
  def self.unsubscribe: () -> Station

  # Unsubscribes all subscribers from a topic and removes the topic via the default Station
  # @rbs topic: String -- topic name
  # @rbs return: Station
  def self.unsubscribe_all: () -> Station

  private

  def initialize: () -> untyped
end
