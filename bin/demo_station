#!/usr/bin/env ruby
# frozen_string_literal: true

require "pry-byebug"
require "pry-doc"
require "amazing_print"
require_relative "../lib/local_bus"

AmazingPrint.pry!

station = LocalBus.instance.station
bus = station.bus

bus.concurrency.times do |num|
  station.subscribe "station-demo" do |_message|
    sleep 1 # sleep 1 second per subscriber
    puts "In subscriber: #{num}"
    num
  end
end

start = Time.now
puts "Calling Station#publish with #{bus.concurrency} subscribers that all sleep for 1 second each."
result = station.publish("station-demo")
puts "Got here fast because the Station runs on a separate thread. Now we wait..."

# NOTE: The Station will block until all subscribers complete if we wait or request the value.
#       Also, the process will attempt a safe shutdown (allowing some time for subscribers to complete)
#       even if we don't explicitly wait for or collect the value.
subscribers = result.value

ap(
  duration: Time.now - start,
  values: (subscribers.map(&:value) if defined?(subscribers))
)
