#!/usr/bin/env ruby
# frozen_string_literal: true

require "pry-byebug"
require "pry-doc"
require "amazing_print"
require_relative "../lib/local_bus"

AmazingPrint.pry!

station = LocalBus.instance.station
bus = station.bus
subscriber_count = bus.concurrency
publish_count = station.threads

subscriber_count.times do |num|
  station.subscribe "station-demo" do |message|
    sleep 1 # sleep 1 second per subscriber
  end
end

station.start
start = Time.now
puts "Calling Station#publish with #{subscriber_count} subscribers that all sleep for 1 second each."
messages = publish_count.times.map do
  station.publish "station-demo"
end
puts "Published #{messages.size} messages with #{subscriber_count} subscribers each."
puts "Got here fast because the Station runs on a separate thread. Now we wait..."

# NOTE: The Station will block until all subscribers complete if we wait or access subscribers.
#       Also, the process will attempt a safe shutdown (allowing some time for subscribers to complete)
#       even if we don't explicitly wait for or collect the value.
messages.each(&:wait)
duration = Time.now - start
subscribers = messages.map(&:subscribers).flatten
ap subscribers: subscribers.map(&:to_h), processed: subscribers.size, duration: duration
